//Interstellar-RealFuels configs
@WARP_PLUGIN_SETTINGS[*]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @HydrogenResourceName = LqdHydrogen //LiquidFuel
    @HydrogenPeroxideResourceName = HTP //H2Peroxide
    @AmmoniaResourceName = LqdAmmonia //Ammonia
    @OxygenResourceName = LqdOxygen //Oxidizer
}

@TANK_DEFINITION[*]:NEEDS[RealFuels,!ThunderAerospace]:FOR[WarpPlugin]
{
	TANK //Adds KSPI Water if TACLS is not present
	{
	    name = Water
	    mass = 0.000012
            utilization = 1
    	    fillable = True
    	    amount = 0.0
    	    maxAmount = 0.0
	}
}

@TANK_DEFINITION[ServiceModule,Fuselage,Jet,Xenon]:NEEDS[RealFuels]:FOR[WarpPlugin]:Final
{
    TANK //Add ArgonGas to all pressurized tanks. Values are based off of XenonGas.
    {
        name = ArgonGas
    	mass = 0.000095
    	utilization = 100
    	fillable = True
    	amount = 0.0
    	maxAmount = 0.0
    	note = (pressurized)
    }
}

@TANK_DEFINITION[Cryogenic,BalloonCryo]:NEEDS[RealFuels]:FOR[WarpPlugin]:Final
{
    TANK //Add LiquidCO2 to Cryogenic tanks. Values are based off of LqdMethane.
    {
        name = LiquidCO2
	mass = 0.000012
    	utilization = 1
    	fillable = True
    	amount = 0.0
    	maxAmount = 0.0
    	temperature = -182
    	loss_rate = 0.00000001
    	note = (has insulation)
    }
    TANK //Add LiquidNitrogen to Cryogenic tanks. Values are based off of LqdOxygen.
    {
        name = LiquidNitrogen
	mass = 0.0000112
    	utilization = 1
    	fillable = True
    	amount = 0.0
    	maxAmount = 0.0
    	temperature = -183
    	loss_rate = 0.00000000002
    	note = (has insulation)
    }
}

//Part catch-all updates
@PART[*]:HAS[@RESOURCE[Ammonia]]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @RESOURCE[Ammonia]
    {
        @name = LqdAmmonia
    }
}
@PART[*]:HAS[@RESOURCE[H2Peroxide]]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @RESOURCE[H2Peroxide]
    {
        @name = HTP
    }
}

//Resource Definition updates
@OCEANIC_RESOURCE_DEFINITION[*]:FINAL:HAS[#resourceName[Ammonia]]:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @resourceName = LqdAmmonia
}
@ATMOSPHERIC_RESOURCE_DEFINITION[*]:FINAL:HAS[#resourceName[Ammonia]]:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @resourceName = LqdAmmonia
}
@OCEANIC_RESOURCE_DEFINITION[*]:FINAL:HAS[#resourceName[H2Peroxide]]:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @resourceName = HTP
}
@ATMOSPHERIC_RESOURCE_DEFINITION[*]:FINAL:HAS[#resourceName[H2Peroxide]]:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @resourceName = HTP
}

@ATMOSPHERIC_RESOURCE_PACK_DEFINITION[InterstellarAtmosphericPack]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @ATMOSPHERIC_RESOURCE_DEFINITION[KerbinOxygen]
    {
        resourceName = LqdOxygen
    }
    @ATMOSPHERIC_RESOURCE_DEFINITION[KerbinHydrogen]
    {
        resourceName = LqdHydrogen
    }
    @ATMOSPHERIC_RESOURCE_DEFINITION[JoolHydrogen]
    {
        resourceName = LqdHydrogen
    }
    @ATMOSPHERIC_RESOURCE_DEFINITION[LaytheOxygen] 
    {
        resourceName = LqdOxygen
    }
    @ATMOSPHERIC_RESOURCE_DEFINITION[DunaOxygen] 
    {
        resourceName = LqdOxygen
    }
}

//NTR Propellant updates
@BASIC_NTR_PROPELLANT[Ammonia]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @guiName = Ammonia
    @PROPELLANT[Ammonia]
    {
        @name = LqdAmmonia
    }
}
@BASIC_NTR_PROPELLANT[Hydrolox]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @guiName = Hydrolox
    @PROPELLANT[LiquidFuel]
    {
        @name = LqdHydrogen
        @ratio = 0.80
    }
    @PROPELLANT[Oxidizer]
    {
        @name = LqdOxygen
        @ratio = 0.20
        @DrawGauge = False
    }
}
@BASIC_NTR_PROPELLANT[Methalox]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @PROPELLANT[Oxidizer]
    {
        @name = LqdOxygen
        @ratio = 0.557
    }
    @PROPELLANT[LqdMethane]
    {
        @ratio = 0.443
    }
}
@BASIC_NTR_PROPELLANT[Hydrogen]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @guiName = LqdHydrogen
    @PROPELLANT[LiquidFuel]
    {
        @name = LqdHydrogen
    }
}

//Electric Propellants update
@ELECTRIC_PROPELLANT[Ammonia]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @PROPELLANT[Ammonia]
    {
        @name = LqdAmmonia
    }
}
@ELECTRIC_PROPELLANT[Hydrogen]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @guiName = LqdHydrogen
    @PROPELLANT[LiquidFuel]
    {
        @name = LqdHydrogen
    }
}
@ELECTRIC_PROPELLANT[MonoPropellant]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @guiName = Hydrazine
    @PROPELLANT[MonoPropellant]
    {
        @name = Hydrazine
    }
}

//Remove duplicate entry for LqdMethane
!RESOURCE_DEFINITION[LqdMethane]:FINAL:HAS[#density[0.00186456]]:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @density = 0.00042262
}

//Specific part fixes
@PART[FNMethaneTank*]:FINAL:HAS[@RESOURCE[LqdMethane],@RESOURCE[Oxidizer],!MODULE[ModuleFuelTanks]]:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    MODULE
    {
        name = ModuleFuelTanks
        temp = 0
        volume = 0
        type = Cryogenic
        @temp = #$../RESOURCE[LqdMethane]/maxAmount$
        @temp *= 4.412
        @volume = #$temp$
        @temp = #$../RESOURCE[Oxidizer]/maxAmount$
        @temp *= 5
        @volume += #$temp$
        !temp = 0
    }
    !RESOURCE[LqdMethane] {}
    !RESOURCE[Oxidizer] {}
}

@PART[*]:FINAL:HAS[@MODULE[FNModuleResourceExtraction]]:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @MODULE[FNModuleResourceExtraction]:HAS[#resourceName[Ammonia]]
    {
        @resourceName = LqdAmmonia
    }
}

@PART[TweakableMagneticNozzle,KSPIMagneticNozzle*]:NEEDS[RealFuels]:FOR[WarpPlugin] //Magnetic Nozzle
{
    @MODULE[ModuleEnginesFX]
    {
	@PROPELLANT[LiquidFuel]
	{
	    @name = LqdHydrogen
	}
    }
}

@PART[FNMethaneEngine]:NEEDS[RealFuels]:FOR[WarpPlugin] //Deinonychus 1-D
{
    @MODULE[ModuleEngines]
    {
	@PROPELLANT[Oxidizer]
	{
	    @name = LqdOxygen
	}
    }
}

//NOTE: the ratio might be kinda screwy; this should really go in an engines config.
@PART[AluminiumHybrid1]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @MODULE[ModuleEngines]
    {
        @PROPELLANT[Oxidizer]
        {
            @name = LqdOxygen
            @ratio *= 5
        }
    }
    @RESOURCE[Oxidizer]
    {
        @name = LqdOxygen
        @amount *= 5
        @maxAmount *= 5
    }
}
@PART[vista]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @MODULE[ModuleEngines]
    {
        @PROPELLANT[LiquidFuel]
        {
            @name = LqdHydrogen
            @ratio *= 14.114
        }
    }
}

//Make ISRU refinery tanks insulated and modular
@PART[FNRefinery]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
	MODULE
	{
		name = ModuleFuelTanks
		volume = 1750
		type = Cryogenic
	}
}
@PART[FNInlineRefinery]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
	MODULE
	{
		name = ModuleFuelTanks
		volume = 1750
		type = Cryogenic
	}
}
@PART[FNInlineRefineryLarge]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
	MODULE
	{
		name = ModuleFuelTanks
		volume = 11000
		type = Cryogenic
	}
}
